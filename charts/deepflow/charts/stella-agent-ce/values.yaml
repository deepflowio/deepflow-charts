global:
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  podAffinityLabelSelector: []
  podAffinityTermLabelSelector: []
  nodeAffinityLabelSelector: []
  nodeAffinityTermLabelSelector: []

replicas: 1

hostNetwork: "false"
dnsPolicy: ClusterFirst
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
podAnnotations: {}

image:
  repository: deepflowce/deepflowio-stella-agent-ce
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # privileged: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: false
  # runAsNonRoot: false
  # runAsUser: 0

service:
  ## Configuration for ClickHouse service
  ##
  annotations: {}
  labels: {}
  clusterIP: ""

  ## Port for ClickHouse Service to listen on
  ##

  ports:
  - name: tcp
    port: 20831
    targetPort: 20831
    nodePort: 
    protocol: TCP
  ## Additional ports to open for server service
  additionalPorts: []

  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []

  ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints

  externalTrafficPolicy: Cluster

  ## Service type
  ##
  type: ClusterIP

readinessProbe:
  httpGet:
    path: /v1/health/
    port: http
  failureThreshold: 10
  initialDelaySeconds: 15
  periodSeconds: 10
  successThreshold: 1
livenessProbe:
  failureThreshold: 6
  initialDelaySeconds: 15
  periodSeconds: 20
  successThreshold: 1
  httpGet:
    path: /v1/health/
    port: http
  timeoutSeconds: 1

configmap:
  df-llm-agent.yaml:
    daemon: true
    api_timeout: 500
    sql_show: false
    log_file: "/var/log/df-llm-agent.log"
    log_level: "info"
    instance_path: "/root/df-llm-agent"
    mysql:
      host: "{{ if $.Values.global.externalMySQL.enabled }}{{$.Values.global.externalMySQL.ip}}{{ else }}{{ $.Release.Name }}-mysql{{end}}"
      port: "{{ if $.Values.global.externalMySQL.enabled }}{{$.Values.global.externalMySQL.port}}{{ else }}30130{{end}}"
      user_password: "{{ if $.Values.global.externalMySQL.enabled }}{{$.Values.global.externalMySQL.password}}{{ else }}{{ .Values.global.password.mysql }}{{end}}"
      database: "deepflow_llm"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

podAntiAffinityLabelSelector: []
podAntiAffinityTermLabelSelector: []
podAffinityLabelSelector: []
podAffinityTermLabelSelector: []
nodeAffinityLabelSelector: []
nodeAffinityTermLabelSelector: []